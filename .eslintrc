{
    /**
     * Environment setup.
     */
    "root": true,
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": "latest",
      "sourceType": "module",
      "project": ["./tsconfig.json"]
    },
    "env": {
      "es2017": true,
      "node": true,
      "jest": true
    },
  
    /**
     * Lint configuration.
     */
    "extends": [
      "eslint:recommended",
      "prettier",
      "plugin:@typescript-eslint/eslint-recommended",
      "plugin:@typescript-eslint/recommended",
      "plugin:typescript-sort-keys/recommended"
    ],
    "plugins": [
      "@typescript-eslint",
      "prettier",
      "sort-imports-es6-autofix",
      "header",
      "sort-keys-fix",
      "typescript-enum"
    ],
    "rules": {
      /**
       * Possible Problems
       */
  
      "array-callback-return": "error",
      // https://typescript-eslint.io/linting/troubleshooting/#i-get-errors-from-the-no-undef-rule-about-global-variables-not-being-defined-even-though-there-are-no-typescript-errors
      "no-undef": "off",
      "no-await-in-loop": "error",
      "no-fallthrough": "error",
      "no-prototype-builtins": "error",
      "no-self-compare": "error",
      // Defer to @typescript-eslint/no-unused-vars
      "no-unused-vars": "off",
  
      /**
       * Suggestions
       */
  
      "block-scoped-var": "error",
      "camelcase": [
        "error",
        {
          "properties": "always",
          "ignoreDestructuring": true
        }
      ],
      "consistent-return": "error",
      "curly": "error",
      "eqeqeq": [
        "error",
        "always",
        {
          "null": "never"
        }
      ],
      "guard-for-in": "error",
      "no-alert": "error",
      "no-bitwise": "error",
      "no-caller": "error",
      "no-case-declarations": "error",
      "no-console": [
        "warn",
        {
          "allow": ["warn", "error"]
        }
      ],
      "no-div-regex": "error",
      "no-else-return": "error",
      "no-eval": "error",
      "no-extend-native": "error",
      "no-implicit-globals": "error",
      "no-implied-eval": "error",
      "no-loop-func": "error",
      "no-multi-str": "error",
      "no-negated-condition": "error",
      "no-nested-ternary": "warn",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-param-reassign": "error",
      "no-return-assign": "error",
      "no-script-url": "error",
      "no-sequences": "error",
      // Defer to @typescript-eslint/no-shadow
      "no-shadow": "off",
      "no-shadow-restricted-names": "error",
      "no-undef-init": "error",
      "no-undefined": "error",
      "no-unsafe-optional-chaining": "error",
      "no-useless-concat": "error",
      "no-useless-constructor": "off",
      "no-useless-rename": "error",
      "no-var": "error",
      "object-shorthand": "error",
      "prefer-arrow-callback": [
        "error",
        {
          "allowNamedFunctions": true
        }
      ],
      "prefer-const": "error",
      "prefer-regex-literals": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "warn",
      // We ues ES6 so this is unnecessary.
      "radix": "off",
      // Defer to @typescript-eslint/require-await
      "require-await": "off",
      "require-unicode-regexp": "error",
      "strict": ["error", "never"],
      "wrap-iife": ["error", "inside"],
      "yoda": [
        "error",
        "never",
        {
          "exceptRange": true
        }
      ],
  
      /**
       * Layout & Formatting
       */
  
      // Defer to @typescript-eslint/comma-dangle
      "comma-dangle": "off",
      // Defer to @typescript-eslint/indent
      // "indent": "off",
      "linebreak-style": ["error", "unix"],
      "object-curly-newline": [
        "off",
        {
          "ObjectPattern": {"multiline": true, "minProperties": 3},
          "ImportDeclaration": {"multiline": true},
          "ExportDeclaration": {"multiline": true, "minProperties": 3}
        }
      ],
      "quotes": ["error", "double", {"allowTemplateLiterals": true}],
      "semi": ["error", "always"],
  
      /**
       * TypeScript
       */
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/comma-dangle": [
        "off",
        {
          "arrays": "always-multiline",
          "objects": "always-multiline",
          "imports": "always-multiline",
          "exports": "never",
          "functions": "always-multiline",
          "enums": "always-multiline"
        }
      ],
      "@typescript-eslint/explicit-function-return-type": [
        "error",
        {"allowExpressions": true}
      ],
      // "@typescript-eslint/indent": ["error", 2],
      "@typescript-eslint/no-shadow": "warn",
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "caughtErrorsIgnorePattern": "^_"
        }
      ],
      "@typescript-eslint/require-await": "error",
      "@typescript-eslint/switch-exhaustiveness-check": "error",
  
      /**
       * Prettier
       */
  
      "prettier/prettier": [
        1,
        {
          "arrowParens": "avoid",
          "bracketSameLine": false,
          "bracketSpacing": false,
          "printWidth": 80,
          "quoteProps": "preserve",
          "semi": true,
          "singleQuote": false,
          "tabWidth": 2,
          "trailingComma": "all",
          "useTabs": false
        }
      ],
  
      /**
       * Sort Imports
       */
  
      "sort-imports-es6-autofix/sort-imports-es6": [
        "error",
        {
          "ignoreCase": false,
          "ignoreMemberSort": false,
          "memberSyntaxSortOrder": ["none", "all", "multiple", "single"]
        }
      ],
  
      /**
       * Sort Keys
       */
  
      "sort-keys-fix/sort-keys-fix": "warn",
  
      /**
       * Local Rules
       */
  
      "header/header": ["error", "eslintconfig/header.js"]
    }
  }
  